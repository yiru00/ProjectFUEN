@model IEnumerable<ProjectFUEN.Models.DTOs.OrderDetailsDTO>
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Mvc.Core.Fluent
@using X.PagedList.Web.Common

@{
    ViewData["Title"] = "訂單管理";

    var pagedList = (IPagedList)ViewBag.OrderDetailDto;
    var state = ViewBag.state as IEnumerable<SelectListItem>;
}


<div class="d-flex no-print align-items-center p-2">
    <h1>訂單管理</h1>
</div>

<div class="p-2">

    <div class="d-flex">

        @using (Html.BeginForm("Search", "OrderDetails", FormMethod.Get))
        {
            <div class="input-group">@Html.DropDownList("State", (IEnumerable<SelectListItem>)ViewBag.SelectList, new { @class = "order-state form-control" })</div>
            <div class="input-group">
                <input type="text" name="account" class="form-control" value="" id="Searchtext" placeholder="請輸入.." />
                <button type="submit" class="btn btn-dark SearchClick" value="" id="SearchClick">
                    <i class="fa-solid fa-magnifying-glass "></i>
                </button>
            </div>
        }
    </div>



    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Member.RealName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Member.EmailAccount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Address)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.State)
                </th>

                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>


                    <td>
                        @Html.DisplayFor(modelItem => item.Member.RealName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Member.EmailAccount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Address)
                    </td>
                    <td>
                        @Html.Raw(GetStateName(item.State))
                    </td>

                    <td>

                        <a class="FunBtn text-dark fc1" asp-action="Edit" asp-route-id="@item.Id" data-fancybox data-type="iframe">
                            <i class="fa-solid fa-pen-to-square"></i>
                        </a> |
                        @* <a asp-action="Edit" asp-route-id="@item.Id">編輯</a> |*@
                        <a class="FunBtn text-dark" asp-controller="OrderDetails" asp-action="OrderitemDetails" asp-route-id="@item.Id"><i class="fa-solid fa-circle-info"></i></a> |
                        <a class="deleteOrder FunBtn text-dark" id="@item.Id" style="cursor:pointer"><i class="fa-solid fa-trash"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="text-muted mx-auto ">
        <div class="align-items-center mx-auto w-50">
            @Html.PagedListPager((IPagedList)pagedList, page =>
            Url.Action("Index", new { page = page }),

            new PagedListRenderOptions {

            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" },

            LinkToFirstPageFormat="<<第一頁",
            LinkToPreviousPageFormat="<",
            LinkToNextPageFormat=">",
            LinkToLastPageFormat="最末頁>>"
            })
        </div>



        第 @(pagedList.PageCount < pagedList.PageNumber ? 0 : pagedList.PageNumber) 頁，共 @pagedList.PageCount 頁。
        每頁 @pagedList.PageSize 筆資料，全部共有 @pagedList.TotalItemCount 筆資料。

    </div>
</div>

@section Scripts
    {
    <script>
        $('.fc1').fancybox({
            iframe: {
                css: {
                    width: '600px',
                    height: '500px',

                }
            },
            afterClose: function () {
                // 關閉後重load資料
                location.reload();
            }
        });



        $(".order-state").on("change", function () {
            $("#SearchClick").trigger("click");
        })


        $(".deleteOrder").on("click", function () {
            let orderid = $(this).attr("id")
            console.log(orderid)
            Swal.fire({
                title: '確定刪除?',
                icon: 'error',
                iconHtml: `<i class="fa-regular fa-trash-can"></i>`,
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '確定',
                cancelButtonText: '取消',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {

                    $.ajax({
                        type: "Delete",
                        url: "https://localhost:7027/OrderDetails/Delete/" + orderid,
                        async: false
                    }).done(function (data) {
                        history.go(0)

                    }).fail(function (err) {
                        alert(err.statusText);
                    })



                }
            })

        })


    </script>
}
@functions {
    public string GetStateName(int state)
    {
        string StateName = "";
        switch (state)
        {
            case 0:
                StateName = @$"<span style=""color:#7B7B7B ;"">未出貨</span>";
                break;
            case 1:
                StateName = @$"<span style=""color: #006000 ;"">已出貨</span>";
                break;
            case 2:
                StateName = @$"<span style=""color: #00A600 ;"">運送中</span>";
                break;
            case 3:
                StateName = @$"<span style=""color: #02DF82 ;"">已簽收</span>";
                break;
            case 4:
                StateName = @$"<span style=""color: #00AEAE	 ;"">已完成</span>";
                break;


        }
        return StateName;
    }
}
